---
Explain the primary differences between TensorFlow and PyTorch. When would you choose one over the other?

TensorFlow and PyTorch are two of the most widely used deep learning frameworks. Both allow developers to build and train neural networks, but they differ in design philosophy, syntax, and ecosystem support.

TensorFlow is developed by Google while pytorch is developed by Meta  

TensorFlow eager execution was disabled by default in early versions but now supported through `tf.function` while Pytorch is enabled by default and is more intitive for beginners

TensorFlow syntax is more verbose which requires defining static computation graphs  while Pytorch is Pythonic and dynamic whose graphs are built on the fly  

TensorFlow has powerful deployment tools like such TensorFlow Lite and TensorFlow Serving |while in Pytorch deployment is improving with TorchServe, but still catching up 


Visualization in TensorFlow is integrated with TensorBoard (very advanced) while Pytorch Supports TensorBoard but not as tightly integrated   

TensorFlow enhances Strong industry support, especially for production use while Pytorch is popular in academia and research due to flexibility.


---
Explain when to choose either TensorFlow or Pytorch

TensorFlow is best chosen in building models for production deployment, for strong support for mobile/IoT (TensorFlow Lite) and if one is working in a corporate environment that uses Google Cloud.

 PyTorch is chosen when doing research or prototyping quickly, if one is learning deep learning concepts and prefers simple, readable code and when one needs to debug easily and track errors in Python-style execution.

----

Compare Scikit-learn and TensorFlow in terms of Target applications (e.g., classical ML vs. deep learning), Ease of use for beginners and community support


